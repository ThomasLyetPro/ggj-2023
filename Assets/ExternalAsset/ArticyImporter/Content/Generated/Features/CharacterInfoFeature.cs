//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.Dracula_1stStepsDemoProject;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.Dracula_1stStepsDemoProject.Features
{
    
    
    [Serializable()]
    public class CharacterInfoFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private Boolean mPlayableCharacter = new Boolean();
        
        [SerializeField()]
        private String mBackground;
        
        [SerializeField()]
        private String mMotivation;
        
        [SerializeField()]
        private String mAppearance;
        
        [SerializeField()]
        private String mVoiceActor;
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        public Boolean PlayableCharacter
        {
            get
            {
                return mPlayableCharacter;
            }
            set
            {
                var oldValue = mPlayableCharacter;
                mPlayableCharacter = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "CharacterInfo.PlayableCharacter", oldValue, mPlayableCharacter);
            }
        }
        
        public String Unresolved_Background
        {
            get
            {
                return mBackground;
            }
        }
        
        public String Background
        {
            get
            {
                return Articy.Unity.ArticyTextExtension.Resolve(this, mBackground);
            }
            set
            {
                var oldValue = mBackground;
                mBackground = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "CharacterInfo.Background", oldValue, mBackground);
            }
        }
        
        public String Unresolved_Motivation
        {
            get
            {
                return mMotivation;
            }
        }
        
        public String Motivation
        {
            get
            {
                return Articy.Unity.ArticyTextExtension.Resolve(this, mMotivation);
            }
            set
            {
                var oldValue = mMotivation;
                mMotivation = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "CharacterInfo.Motivation", oldValue, mMotivation);
            }
        }
        
        public String Unresolved_Appearance
        {
            get
            {
                return mAppearance;
            }
        }
        
        public String Appearance
        {
            get
            {
                return Articy.Unity.ArticyTextExtension.Resolve(this, mAppearance);
            }
            set
            {
                var oldValue = mAppearance;
                mAppearance = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "CharacterInfo.Appearance", oldValue, mAppearance);
            }
        }
        
        public String Unresolved_VoiceActor
        {
            get
            {
                return mVoiceActor;
            }
        }
        
        public String VoiceActor
        {
            get
            {
                return Articy.Unity.ArticyTextExtension.Resolve(this, mVoiceActor);
            }
            set
            {
                var oldValue = mVoiceActor;
                mVoiceActor = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "CharacterInfo.VoiceActor", oldValue, mVoiceActor);
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Dracula_1stStepsDemoProject.Features.CharacterInfoFeature newClone = ((Articy.Dracula_1stStepsDemoProject.Features.CharacterInfoFeature)(aClone));
            newClone.PlayableCharacter = PlayableCharacter;
            newClone.Background = Unresolved_Background;
            newClone.Motivation = Unresolved_Motivation;
            newClone.Appearance = Unresolved_Appearance;
            newClone.VoiceActor = Unresolved_VoiceActor;
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Dracula_1stStepsDemoProject.Features.CharacterInfoFeature clone = new Articy.Dracula_1stStepsDemoProject.Features.CharacterInfoFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "PlayableCharacter"))
            {
                PlayableCharacter = System.Convert.ToBoolean(aValue);
                return;
            }
            if ((aProperty == "Background"))
            {
                Background = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Motivation"))
            {
                Motivation = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Appearance"))
            {
                Appearance = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "VoiceActor"))
            {
                VoiceActor = System.Convert.ToString(aValue);
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "PlayableCharacter"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(PlayableCharacter);
            }
            if ((aProperty == "Background"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Background);
            }
            if ((aProperty == "Motivation"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Motivation);
            }
            if ((aProperty == "Appearance"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Appearance);
            }
            if ((aProperty == "VoiceActor"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(VoiceActor);
            }
            return null;
        }
        #endregion
    }
}
